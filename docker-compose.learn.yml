services:
  nginx:
    networks:
      - ol-network
    hostname: api.learn.odl.local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.learn-api.rule=Host(`api.learn.odl.local`)"
      - "traefik.http.routers.learn-api.entrypoints=https"
      - "traefik.http.routers.learn-api.tls=true"
      - "traefik.http.routers.learn-api.service=learn-api"
      - "traefik.http.services.learn-api.loadbalancer.server.port=8063"
    
  web:
    networks:
      - default
      - ol-network
    extra_hosts:
      - keycloak.odl.local:172.44.0.200
    environment:
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    volumes:
      - ${OL_ROOT}/certs/odl.local.pem:/etc/ssl/certs/odl.local.pem
      - ${HOME}/.local/share/mkcert/rootCA.pem:/etc/ssl/certs/mkcert-rootCA.pem

  celery:
    networks:
      - default
      - ol-network
    extra_hosts:
      # go through traefik
      - keycloak.odl.local:172.44.0.200
    environment:
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    volumes:
      - ${OL_ROOT}/certs/odl.local.crt:/etc/ssl/certs/odl.local.crt
      - ${HOME}/.local/share/mkcert/rootCA.pem:/etc/ssl/certs/mkcert-rootCA.pem

  watch:
    networks:
      - ol-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.learn-web.rule=Host(`learn.odl.local`)"
      - "traefik.http.routers.learn-web.entrypoints=https"
      - "traefik.http.routers.learn-web.tls=true"
      - "traefik.http.services.learn-web.loadbalancer.server.port=8062"

networks:
  default:
  ol-network:
    external: true
